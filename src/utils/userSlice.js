import { createSlice } from '@reduxjs/toolkit';

/**
 * Redux slice for managing user-related state.
 * @type {Object}
 */
const userSlice = createSlice({
  /**
   * Name of the slice.
   * @type {string}
   */
  name: 'user',

  /**
   * Initial state of the user slice.
   * @type {null|Object}
   */
  initialState: null,

  /**
   * Reducers defining actions to update the user state.
   * @type {Object}
   */
  reducers: {
    /**
     * Action to add a user to the state.
     * @function
     * @param {null|Object} state - Current state of the user slice.
     * @param {Object} action - Action payload containing the user data.
     * @returns {Object} New state with the added user.
     */
    addUser: (state, action) => {
      return action.payload;
    },

    /**
     * Action to remove a user from the state.
     * @function
     * @param {null|Object} state - Current state of the user slice.
     * @param {Object} action - Action payload (not used in this case).
     * @returns {null} New state with the user removed.
     */
    removeUser: (state, action) => {
      return null;
    },
  },
});

/**
 * Actions generated by the user slice.
 * @type {Object}
 */
export const { addUser, removeUser } = userSlice.actions;

/**
 * Reducer function for the user slice.
 * @type {Function}
 */
export default userSlice.reducer;
